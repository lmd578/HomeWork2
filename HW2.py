# ЗАДАНИЕ 1:
# Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.


my_list = ['Diane', 29, False, -123]
print(type(my_list[0]))
print(type(my_list[1]))
print(type(my_list[2]))
print(type(my_list[3]))

# ЗАДАНИЕ 2:
# Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

my_string = input('Введите последовательность чисел: ')
my_list = my_string.split()

for i in range(1, len(my_list), 2):
    a = my_list[i - 1]
    my_list[i - 1] = my_list[i]
    my_list[i] = a
print(' '.join([str(i) for i in my_list]))


# ЗАДАНИЕ 3:
# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.


month_dict = {
    1: 'winter',
    2: 'spring',
    3: 'summer',
    4: 'fall'
}
month = int(input("Введите номер месяца в году (от 1 до 12): "))
if month == 1 or month == 12 or month == 2:
    print(month_dict.get(1))
elif month == 3 or month == 4 or month == 5:
    print(month_dict.get(2))
elif month == 6 or month == 7 or month == 8:
    print(month_dict.get(3))
else:
    print(month_dict.get(4))


# ЗАДАНИЕ 4:
# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

user_string = input('Введите строку из нескольких элементов, разделенных пробелами: ')
my_list = []
x = 1

for element in range(user_string.count(' ') + 1):
    my_list = user_string.split()
    if len(str(my_list)) <= 10:
        print(f" {x} {my_list [element]}")
        x += 1
    else:
        print(f" {x} {my_list [element] [0:10]}")
        x += 1



# ЗАДАНИЕ 5:
# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.


my_list = [11, 8, 5, 5, 0]
new_number = int(input('Введите число: '))
index = 0

for item in my_list:
    if new_number <= item:
        index = my_list.index(item) + 1

my_list.insert(index, new_number)
print(my_list)